@using Microsoft.AspNetCore.Components.Authorization
@inject AuthenticationStateProvider AuthStateProvider

<header class="main-header">
    <nav class="navbar">
        <div class="navbar-container">
            <a href="/" class="navbar-brand">
                <span class="brand-icon">ðŸ”¨</span>
                <span class="brand-name">FindTradie</span>
            </a>

            <button class="mobile-menu-btn" @onclick="ToggleNavMenu">
                <svg width="24" height="24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                    <path d="M4 6h16M4 12h16M4 18h16" />
                </svg>
            </button>

            <div class="nav-menu @(collapseNavMenu ? string.Empty : "mobile-open")">
                <NavLink href="/" class="nav-link" Match="NavLinkMatch.All">Home</NavLink>

                <AuthorizeView>
                    <Authorized>
                        @if (IsCustomer)
                        {
                            <!-- Customer-specific navigation items -->
                            <NavLink href="/find-tradies" class="nav-link">Find Tradies</NavLink>
                            <NavLink href="/post-job" class="nav-link">Post a Job</NavLink>
                        }
                        else if (IsTradie)
                        {
                            <!-- Tradie-specific navigation items -->
                            <NavLink href="/browse-jobs" class="nav-link">Browse Jobs</NavLink>
                            <NavLink href="/my-quotes" class="nav-link">My Quotes</NavLink>
                            <NavLink href="/my-profile" class="nav-link">My Profile</NavLink>
                        }
                    </Authorized>
                    <NotAuthorized>
                        <!-- Public navigation items for non-authenticated users -->
                        <NavLink href="/find-tradies" class="nav-link">Find Tradies</NavLink>
                        <NavLink href="/how-it-works" class="nav-link">How It Works</NavLink>
                    </NotAuthorized>
                </AuthorizeView>

                <!-- Common navigation items for all users -->
                <NavLink href="/help" class="nav-link">Help Center</NavLink>
                <NavLink href="/faq" class="nav-link">FAQ</NavLink>
            </div>

            <div class="nav-user-section user-greeting-section">
                <div class="nav-notifications">
                    <button class="notification-btn">
                        <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                            <path d="M15 17h5l-1.405-1.405A2.032 2.032 0 0118 14.158V11a6.002 6.002 0 00-4-5.659V5a2 2 0 10-4 0v.341C7.67 6.165 6 8.388 6 11v3.159c0 .538-.214 1.055-.595 1.436L4 17h5m6 0v1a3 3 0 11-6 0v-1m6 0H9" />
                        </svg>
                        <span class="notification-badge">3</span>
                    </button>
                </div>

                <AuthorizeView>
                    <Authorized>
                        <LoginDisplay />
                    </Authorized>
                    <NotAuthorized>
                        <a href="/register" class="btn btn-outline btn-register">Register</a>
                        <a href="/login" class="btn btn-primary btn-login">Log in</a>
                    </NotAuthorized>
                </AuthorizeView>
            </div>
        </div>
    </nav>
</header>

@code {
    private bool collapseNavMenu = true;
    private bool IsCustomer = false;
    private bool IsTradie = false;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthStateProvider.GetAuthenticationStateAsync();

        if (authState.User.Identity?.IsAuthenticated == true)
        {
            // Get user type from claims
            var userType = authState.User.FindFirst("UserType")?.Value;

            // Handle different possible values for user type
            IsCustomer = userType == "Customer" || userType == "1";
            IsTradie = userType == "Tradie" || userType == "ServiceProvider" || userType == "2";
        }
    }

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
}