@inherits LayoutComponentBase
@using Microsoft.AspNetCore.Components.Authorization
@inject AuthenticationStateProvider AuthStateProvider
@inject NavigationManager Navigation
@inject IJSRuntime JS

<div class="app-container">
    <!-- Fixed Header -->
    <header class="main-header">
        <nav class="navbar">
            <div class="navbar-container">
                <!-- Logo -->
                <a href="/" class="navbar-brand">
                    <div class="brand-logo">üî®</div>
                    <span>FindTradie</span>
                </a>

                <!-- Desktop Navigation -->
                <div class="nav-menu @(isMobileMenuOpen ? "active" : "")" @onclick="CloseMobileMenu">
                    <NavLink class="nav-link" href="/" Match="NavLinkMatch.All">
                        <span class="nav-icon">üè†</span>
                        Home
                    </NavLink>
                    <NavLink class="nav-link" href="/find-tradies">
                        <span class="nav-icon">üîç</span>
                        Find Tradies
                    </NavLink>
                    <NavLink class="nav-link" href="/post-job">
                        <span class="nav-icon">üìù</span>
                        Post a Job
                    </NavLink>
                    <NavLink class="nav-link" href="/how-it-works">
                        <span class="nav-icon">‚ùì</span>
                        How It Works
                    </NavLink>
                    
                    <AuthorizeView>
                        <Authorized>
                            <NavLink class="nav-link" href="/dashboard">
                                <span class="nav-icon">üìä</span>
                                Dashboard
                            </NavLink>
                            <NavLink class="nav-link" href="/jobs">
                                <span class="nav-icon">üíº</span>
                                My Jobs
                            </NavLink>
                        </Authorized>
                    </AuthorizeView>
                    
                    <NavLink class="nav-link" href="/help">
                        <span class="nav-icon">üí°</span>
                        Help Center
                    </NavLink>
                    <NavLink class="nav-link" href="/faq">
                        <span class="nav-icon">‚ùî</span>
                        FAQ
                    </NavLink>
                </div>

                <!-- User Section -->
                <div class="nav-user-section">
                    <AuthorizeView>
                        <Authorized>
                            <div class="user-menu">
                                <button class="user-menu-toggle" @onclick="ToggleUserDropdown">
                                    <div class="user-avatar">
                                        @GetUserInitials()
                                    </div>
                                    <span class="user-name">@GetUserName()</span>
                                    <span class="dropdown-arrow">‚ñº</span>
                                </button>
                                
                                @if (isUserDropdownOpen)
                                {
                                    <div class="user-dropdown">
                                        <div class="dropdown-header">
                                            <div class="user-info">
                                                <strong>@GetUserName()</strong>
                                                <span class="user-email">@GetUserEmail()</span>
                                                <span class="user-type-badge @GetUserType()">@GetUserType()</span>
                                            </div>
                                        </div>
                                        <div class="dropdown-divider"></div>
                                        <a href="/profile" class="dropdown-item">
                                            <span>üë§</span> My Profile
                                        </a>
                                        <a href="/settings" class="dropdown-item">
                                            <span>‚öôÔ∏è</span> Settings
                                        </a>
                                        @if (GetUserType() == "Tradie")
                                        {
                                            <a href="/my-business" class="dropdown-item">
                                                <span>üè¢</span> My Business
                                            </a>
                                        }
                                        <div class="dropdown-divider"></div>
                                        <button class="dropdown-item logout" @onclick="Logout">
                                            <span>üö™</span> Log Out
                                        </button>
                                    </div>
                                }
                            </div>
                        </Authorized>
                        <NotAuthorized>
                            <div class="auth-buttons">
                                <a href="/register" class="btn-register">Register</a>
                                <a href="/login" class="btn-login">Log In</a>
                            </div>
                        </NotAuthorized>
                    </AuthorizeView>
                </div>

                <!-- Mobile Menu Toggle -->
                <button class="mobile-menu-toggle" @onclick="ToggleMobileMenu">
                    <span class="menu-bar"></span>
                    <span class="menu-bar"></span>
                    <span class="menu-bar"></span>
                </button>
            </div>
        </nav>
    </header>

    <!-- Main Content Area -->
    <main class="main-content">
        @Body
    </main>

    <!-- Footer -->
    <footer class="main-footer">
        <div class="footer-container">
            <div class="footer-content">
                <div class="footer-section">
                    <h3>FindTradie</h3>
                    <p>Connecting Australians with trusted local tradies.</p>
                    <div class="social-links">
                        <a href="#" aria-label="Facebook">üìò</a>
                        <a href="#" aria-label="Twitter">üê¶</a>
                        <a href="#" aria-label="LinkedIn">üíº</a>
                        <a href="#" aria-label="Instagram">üì∑</a>
                    </div>
                </div>
                <div class="footer-section">
                    <h4>Company</h4>
                    <a href="/about">About Us</a>
                    <a href="/contact">Contact</a>
                    <a href="/careers">Careers</a>
                    <a href="/press">Press</a>
                </div>
                <div class="footer-section">
                    <h4>Support</h4>
                    <a href="/help">Help Center</a>
                    <a href="/faq">FAQ</a>
                    <a href="/safety">Safety</a>
                    <a href="/terms">Terms</a>
                </div>
                <div class="footer-section">
                    <h4>Services</h4>
                    <a href="/find-tradies">Find Tradies</a>
                    <a href="/post-job">Post a Job</a>
                    <a href="/pricing">Pricing</a>
                    <a href="/areas">Service Areas</a>
                </div>
            </div>
            <div class="footer-bottom">
                <p>&copy; 2025 FindTradie. All rights reserved.</p>
                <div class="footer-links">
                    <a href="/privacy">Privacy Policy</a>
                    <a href="/terms">Terms of Service</a>
                    <a href="/cookies">Cookie Policy</a>
                </div>
            </div>
        </div>
    </footer>
</div>

@code {
    private bool isMobileMenuOpen = false;
    private bool isUserDropdownOpen = false;
    private AuthenticationState? authState;

    protected override async Task OnInitializedAsync()
    {
        authState = await AuthStateProvider.GetAuthenticationStateAsync();
    }

    private void ToggleMobileMenu()
    {
        isMobileMenuOpen = !isMobileMenuOpen;
    }

    private void CloseMobileMenu()
    {
        isMobileMenuOpen = false;
    }

    private void ToggleUserDropdown()
    {
        isUserDropdownOpen = !isUserDropdownOpen;
    }

    private string GetUserName()
    {
        if (authState?.User?.Identity?.IsAuthenticated == true)
        {
            return authState.User.FindFirst("FirstName")?.Value ??
                   authState.User.FindFirst("Name")?.Value ??
                   authState.User.Identity.Name ??
                   "User";
        }
        return "User";
    }

    private string GetUserEmail()
    {
        return authState?.User?.FindFirst("Email")?.Value ??
               authState?.User?.Identity?.Name ?? "";
    }

    private string GetUserType()
    {
        var userType = authState?.User?.FindFirst("UserType")?.Value ?? "1";
        return userType == "2" ? "Tradie" : "Customer";
    }

    private string GetUserInitials()
    {
        var name = GetUserName();
        if (string.IsNullOrEmpty(name)) return "U";
        
        var parts = name.Split(' ');
        if (parts.Length >= 2)
            return $"{parts[0][0]}{parts[1][0]}".ToUpper();
        
        return name.Substring(0, Math.Min(2, name.Length)).ToUpper();
    }

    private async Task Logout()
    {
        Navigation.NavigateTo("/logout");
    }
}
