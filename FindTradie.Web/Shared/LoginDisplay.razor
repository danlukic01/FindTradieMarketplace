@using Microsoft.AspNetCore.Components.Authorization
@using FindTradie.Web.Auth
@using System.Linq
@inject AuthenticationStateProvider AuthStateProvider
@inject NavigationManager Navigation
@inject FindTradie.Web.Services.IAuthService AuthService

<AuthorizeView>
    <Authorized>
        @{
            UserName = context.User?.Identity?.Name ??
                        context.User?.FindFirst("FirstName")?.Value ??
                        context.User?.FindFirst("name")?.Value ??
                        context.User?.FindFirst("email")?.Value?.Split('@')[0] ??
                        "User";
        }
        <div class="user-section">
            <button class="user-menu-btn" @onclick="ToggleUserMenu">
                <div class="user-avatar">@GetInitials()</div>
                <span class="user-name">Hello, @UserName</span>
                <svg class="chevron @(showMenu ? "rotate" : string.Empty)" width="12" height="12" viewBox="0 0 12 12">
                    <path d="M2 4L6 8L10 4" stroke="currentColor" fill="none" />
                </svg>
            </button>
            @if (showMenu)
            {
                <div class="user-dropdown">
                    <a href="/my-profile" @onclick="NavigateToProfile" @onclick:preventDefault="true" class="dropdown-link"><span>👤</span> My Profile</a>
                    <a href="/myjobs" @onclick="NavigateToMyJobs" @onclick:preventDefault="true" class="dropdown-link"><span>📋</span> My Jobs</a>
                    <a href="/settings" @onclick="NavigateToSettings" @onclick:preventDefault="true" class="dropdown-link"><span>⚙️</span> Settings</a>
                    <hr class="dropdown-divider" />
                    <button @onclick="LogoutAsync" class="dropdown-link logout"><span>🚪</span> Log Out</button>
                </div>
            }
        </div>
    </Authorized>
    <NotAuthorized>
        <div class="auth-links">
            <a href="register" class="btn-register">Register</a>
            <a href="login" class="btn-login ms-2">Log in</a>
        </div>
    </NotAuthorized>
</AuthorizeView>

@code {
    private bool showMenu;
    private string UserName = string.Empty;

    private void ToggleUserMenu() => showMenu = !showMenu;

    private string GetInitials()
    {
        if (string.IsNullOrWhiteSpace(UserName))
            return string.Empty;
        var parts = UserName.Split(' ', StringSplitOptions.RemoveEmptyEntries);
        return string.Concat(parts.Take(2).Select(p => char.ToUpperInvariant(p[0])));
    }

    private void NavigateToProfile()
    {
        showMenu = false;
        Navigation.NavigateTo("/my-profile");
    }

    private void NavigateToMyJobs()
    {
        showMenu = false;
        Navigation.NavigateTo("/myjobs");
    }

    private void NavigateToSettings()
    {
        showMenu = false;
        Navigation.NavigateTo("/settings");
    }

    private async Task LogoutAsync()
    {
        await AuthService.LogoutAsync();

        if (AuthStateProvider is CustomAuthStateProvider customProvider)
        {
            customProvider.NotifyUserLogout();
        }

        Navigation.NavigateTo("/");
    }
}