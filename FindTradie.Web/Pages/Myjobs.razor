@page "/Myjobs"
@attribute [Authorize]
@using FindTradie.Services.JobManagement.Entities
@using Microsoft.AspNetCore.Components.Authorization
@using FindTradie.Shared.Domain.Enums
@inject AuthenticationStateProvider AuthStateProvider
@inject NavigationManager Navigation

<PageTitle>My Jobs - FindTradie</PageTitle>

<div class="my-jobs-page">
    @if (IsCustomer)
    {
        <!-- Customer View -->
        <section class="page-header">
            <div class="container">
                <h1>My Jobs</h1>
                <p>Manage your posted jobs and track progress</p>
            </div>
        </section>

        <section class="jobs-content">
            <div class="container">
                <!-- Job Status Tabs -->
                <div class="job-tabs">
                    <button class="tab-btn @(activeTab == "active" ? "active" : "")"
                            @onclick="@(() => SetActiveTab("active"))">
                        Active Jobs (@ActiveJobs.Count)
                    </button>
                    <button class="tab-btn @(activeTab == "completed" ? "active" : "")"
                            @onclick="@(() => SetActiveTab("completed"))">
                        Completed (@CompletedJobs.Count)
                    </button>
                    <button class="tab-btn @(activeTab == "cancelled" ? "active" : "")"
                            @onclick="@(() => SetActiveTab("cancelled"))">
                        Cancelled (@CancelledJobs.Count)
                    </button>
                </div>

                @if (activeTab == "active")
                {
                    <div class="jobs-list">
                        @if (ActiveJobs.Any())
                        {
                            @foreach (var job in ActiveJobs)
                            {
                                <div class="job-card-detailed">
                                    <div class="job-card-header">
                                        <div>
                                            <h3>@job.Title</h3>
                                            <p class="job-meta">
                                                <span class="category-badge">@job.Category</span>
                                                <span class="date">Posted @job.PostedDate</span>
                                            </p>
                                        </div>
                                        <div class="job-status-badge @job.Status.ToString().ToLower()">
                                            @GetStatusDisplay(job.Status)
                                        </div>
                                    </div>

                                    <div class="job-card-body">
                                        <p>@job.Description</p>
                                        <div class="job-details-row">
                                            <div class="detail-item">
                                                <i class="fas fa-map-marker-alt"></i>
                                                @job.Suburb, @job.State
                                            </div>
                                            @if (job.BudgetMin.HasValue && job.BudgetMax.HasValue)
                                            {
                                                <div class="detail-item">
                                                    <i class="fas fa-dollar-sign"></i>
                                                    $@job.BudgetMin - $@job.BudgetMax
                                                </div>
                                            }
                                            <div class="detail-item">
                                                <i class="fas fa-clock"></i>
                                                @job.Urgency
                                            </div>
                                        </div>
                                    </div>

                                    <div class="job-card-footer">
                                        <div class="quotes-info">
                                            <strong>@job.QuotesCount</strong> quotes received
                                            @if (job.AssignedTradie != null)
                                            {
                                                <span class="assigned-info">
                                                    • Assigned to <strong>@job.AssignedTradie</strong>
                                                </span>
                                            }
                                        </div>
                                        <div class="job-actions">
                                            @if (job.Status == JobStatus.Posted || job.Status == JobStatus.QuoteReceived)
                                            {
                                                <button class="btn btn-outline" @onclick="() => ViewQuotes(job.Id)">
                                                    View Quotes
                                                </button>
                                            }
                                            @if (job.Status == JobStatus.InProgress)
                                            {
                                                <button class="btn btn-outline" @onclick="() => MessageTradie(job.Id)">
                                                    Message Tradie
                                                </button>
                                            }
                                            <button class="btn btn-primary" @onclick="() => ViewJobDetails(job.Id)">
                                                View Details
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            }
                        }
                        else
                        {
                            <div class="empty-state">
                                <i class="fas fa-briefcase"></i>
                                <h3>No active jobs</h3>
                                <p>Post a job to get quotes from verified tradies</p>
                                <button class="btn btn-primary" @onclick="NavigateToPostJob">
                                    Post a Job
                                </button>
                            </div>
                        }
                    </div>
                }
                else if (activeTab == "completed")
                {
                    <div class="jobs-list">
                        @if (CompletedJobs.Any())
                        {
                            @foreach (var job in CompletedJobs)
                            {
                                <div class="job-card-detailed completed">
                                    <div class="job-card-header">
                                        <div>
                                            <h3>@job.Title</h3>
                                            <p class="job-meta">
                                                <span class="category-badge">@job.Category</span>
                                                <span class="date">Completed @job.CompletedDate</span>
                                            </p>
                                        </div>
                                        <div class="job-status-badge completed">
                                            <i class="fas fa-check-circle"></i> Completed
                                        </div>
                                    </div>

                                    <div class="job-card-body">
                                        <div class="completion-info">
                                            <p><strong>Tradie:</strong> @job.AssignedTradie</p>
                                            <p><strong>Final Amount:</strong> $@job.FinalAmount</p>
                                        </div>
                                    </div>

                                    <div class="job-card-footer">
                                        <div class="rating-prompt">
                                            @if (!job.HasReview)
                                            {
                                                <span>How was your experience?</span>
                                                <button class="btn btn-primary" @onclick="() => LeaveReview(job.Id)">
                                                    Leave a Review
                                                </button>
                                            }
                                            else
                                            {
                                                <span class="review-done">
                                                    <i class="fas fa-star"></i> Review submitted
                                                </span>
                                            }
                                        </div>
                                        <button class="btn btn-outline" @onclick="() => ViewJobDetails(job.Id)">
                                            View Details
                                        </button>
                                    </div>
                                </div>
                            }
                        }
                        else
                        {
                            <div class="empty-state">
                                <i class="fas fa-check-circle"></i>
                                <h3>No completed jobs yet</h3>
                                <p>Your completed jobs will appear here</p>
                            </div>
                        }
                    </div>
                }
                else if (activeTab == "cancelled")
                {
                    <div class="jobs-list">
                        @if (CancelledJobs.Any())
                        {
                            @foreach (var job in CancelledJobs)
                            {
                                <div class="job-card-detailed cancelled">
                                    <div class="job-card-header">
                                        <div>
                                            <h3>@job.Title</h3>
                                            <p class="job-meta">
                                                <span class="category-badge">@job.Category</span>
                                                <span class="date">Cancelled @job.CancelledDate</span>
                                            </p>
                                        </div>
                                        <div class="job-status-badge cancelled">
                                            Cancelled
                                        </div>
                                    </div>

                                    <div class="job-card-footer">
                                        <button class="btn btn-outline" @onclick="() => RepostJob(job.Id)">
                                            Repost Job
                                        </button>
                                    </div>
                                </div>
                            }
                        }
                        else
                        {
                            <div class="empty-state">
                                <i class="fas fa-times-circle"></i>
                                <h3>No cancelled jobs</h3>
                                <p>Any cancelled jobs will appear here</p>
                            </div>
                        }
                    </div>
                }
            </div>
        </section>
    }
    else if (IsTradie)
    {
        <!-- Tradie View -->
        <section class="page-header">
            <div class="container">
                <h1>My Jobs</h1>
                <p>Track your quotes and assigned jobs</p>
            </div>
        </section>

        <section class="jobs-content">
            <div class="container">
                <!-- Quote Status Tabs -->
                <div class="job-tabs">
                    <button class="tab-btn @(activeTab == "quotes" ? "active" : "")"
                            @onclick="@(() => SetActiveTab("quotes"))">
                        Active Quotes (@ActiveQuotes.Count)
                    </button>
                    <button class="tab-btn @(activeTab == "assigned" ? "active" : "")"
                            @onclick="@(() => SetActiveTab("assigned"))">
                        Assigned Jobs (@AssignedJobs.Count)
                    </button>
                    <button class="tab-btn @(activeTab == "completed" ? "active" : "")"
                            @onclick="@(() => SetActiveTab("completed"))">
                        Completed (@CompletedJobs.Count)
                    </button>
                </div>

                @if (activeTab == "quotes")
                {
                    <div class="jobs-list">
                        @if (ActiveQuotes.Any())
                        {
                            @foreach (var quote in ActiveQuotes)
                            {
                                <div class="job-card-detailed">
                                    <div class="job-card-header">
                                        <div>
                                            <h3>@quote.JobTitle</h3>
                                            <p class="job-meta">
                                                <span class="category-badge">@quote.Category</span>
                                                <span class="date">Quoted @quote.QuotedDate</span>
                                            </p>
                                        </div>
                                        <div class="quote-status-badge @quote.Status.ToString().ToLower()">
                                            @quote.Status
                                        </div>
                                    </div>

                                    <div class="job-card-body">
                                        <div class="quote-details">
                                            <div class="quote-amount">
                                                <strong>Your Quote:</strong> $@quote.TotalAmount
                                            </div>
                                            <div class="quote-timeline">
                                                <i class="fas fa-calendar"></i>
                                                Proposed start: @quote.ProposedStartDate?.ToString("dd MMM yyyy")
                                            </div>
                                        </div>
                                    </div>

                                    <div class="job-card-footer">
                                        <div class="quote-expiry">
                                            Expires in @quote.DaysUntilExpiry days
                                        </div>
                                        <div class="job-actions">
                                            <button class="btn btn-outline" @onclick="() => EditQuote(quote.Id)">
                                                Edit Quote
                                            </button>
                                            <button class="btn btn-primary" @onclick="() => ViewQuoteDetails(quote.Id)">
                                                View Details
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            }
                        }
                        else
                        {
                            <div class="empty-state">
                                <i class="fas fa-file-invoice-dollar"></i>
                                <h3>No active quotes</h3>
                                <p>Browse available jobs to submit quotes</p>
                                <button class="btn btn-primary" @onclick="NavigateToBrowseJobs">
                                    Browse Jobs
                                </button>
                            </div>
                        }
                    </div>
                }
                else if (activeTab == "assigned")
                {
                    <div class="jobs-list">
                        @if (AssignedJobs.Any())
                        {
                            @foreach (var job in AssignedJobs)
                            {
                                <div class="job-card-detailed assigned">
                                    <div class="job-card-header">
                                        <div>
                                            <h3>@job.Title</h3>
                                            <p class="job-meta">
                                                <span class="customer-name">Customer: @job.CustomerName</span>
                                            </p>
                                        </div>
                                        <div class="job-status-badge in-progress">
                                            In Progress
                                        </div>
                                    </div>

                                    <div class="job-card-body">
                                        <div class="job-details-row">
                                            <div class="detail-item">
                                                <i class="fas fa-map-marker-alt"></i>
                                                @job.Address
                                            </div>
                                            <div class="detail-item">
                                                <i class="fas fa-phone"></i>
                                                @job.CustomerPhone
                                            </div>
                                            <div class="detail-item">
                                                <i class="fas fa-dollar-sign"></i>
                                                $@job.AcceptedAmount
                                            </div>
                                        </div>
                                    </div>

                                    <div class="job-card-footer">
                                        <div class="job-actions">
                                            <button class="btn btn-outline" @onclick="() => MessageCustomer(job.Id)">
                                                Message Customer
                                            </button>
                                            <button class="btn btn-success" @onclick="() => MarkComplete(job.Id)">
                                                Mark Complete
                                            </button>
                                            <button class="btn btn-primary" @onclick="() => ViewJobDetails(job.Id)">
                                                View Details
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            }
                        }
                        else
                        {
                            <div class="empty-state">
                                <i class="fas fa-hard-hat"></i>
                                <h3>No assigned jobs</h3>
                                <p>Jobs you've been hired for will appear here</p>
                            </div>
                        }
                    </div>
                }
            </div>
        </section>
    }
</div>

@code {
    private string UserName = "";
    private bool IsCustomer = true;
    private bool IsTradie = false;
    private string activeTab = "active";

    // Customer job lists
    private List<CustomerJobViewModel> ActiveJobs = new();
    private List<CustomerJobViewModel> CompletedJobs = new();
    private List<CustomerJobViewModel> CancelledJobs = new();

    // Tradie lists
    private List<TradieQuoteViewModel> ActiveQuotes = new();
    private List<TradieJobViewModel> AssignedJobs = new();

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthStateProvider.GetAuthenticationStateAsync();

        if (authState.User.Identity?.IsAuthenticated == true)
        {
            UserName = authState.User.FindFirst("FirstName")?.Value ??
                      authState.User.Identity.Name ?? "User";

            var userType = authState.User.FindFirst("UserType")?.Value;
            IsCustomer = userType == "Customer" || userType == "1";
            IsTradie = userType == "Tradie" || userType == "ServiceProvider" || userType == "2";

            if (IsTradie)
            {
                activeTab = "quotes";
            }

            await LoadJobs();
        }
        else
        {
            Navigation.NavigateTo("/login");
        }
    }

    private async Task LoadJobs()
    {
        // TODO: Call actual API service to load jobs
        // This is sample data
        if (IsCustomer)
        {
            ActiveJobs = new List<CustomerJobViewModel>
            {
                new CustomerJobViewModel
                {
                    Id = Guid.NewGuid(),
                    Title = "Fix Leaking Tap in Kitchen",
                    Category = "Plumbing",
                    Description = "Kitchen tap has been dripping for a week",
                    Status = JobStatus.QuoteReceived,
                    PostedDate = "2 days ago",
                    Suburb = "Bondi",
                    State = "NSW",
                    BudgetMin = 100,
                    BudgetMax = 300,
                    Urgency = JobUrgency.Normal,
                    QuotesCount = 3
                }
            };
        }
        else
        {
            ActiveQuotes = new List<TradieQuoteViewModel>
            {
                new TradieQuoteViewModel
                {
                    Id = Guid.NewGuid(),
                    JobTitle = "Bathroom Renovation",
                    Category = "Plumbing",
                    Status = QuoteStatus.Submitted,
                    QuotedDate = "1 day ago",
                    TotalAmount = 2500,
                    ProposedStartDate = DateTime.Now.AddDays(7),
                    DaysUntilExpiry = 6
                }
            };
        }
    }

    private void SetActiveTab(string tab)
    {
        activeTab = tab;
    }

    private string GetStatusDisplay(JobStatus status)
    {
        return status switch
        {
            JobStatus.Posted => "Accepting Quotes",
            JobStatus.QuoteReceived => "Reviewing Quotes",
            JobStatus.Booked => "Tradie Assigned",
            JobStatus.InProgress => "In Progress",
            JobStatus.Completed => "Completed",
            JobStatus.Cancelled => "Cancelled",
            _ => status.ToString()
        };
    }

    // Navigation methods
    private void NavigateToPostJob() => Navigation.NavigateTo("/post-job");
    private void NavigateToBrowseJobs() => Navigation.NavigateTo("/browse-jobs");
    private void ViewJobDetails(Guid id) => Navigation.NavigateTo($"/job/{id}");
    private void ViewQuotes(Guid id) => Navigation.NavigateTo($"/job/{id}/quotes");
    private void ViewQuoteDetails(Guid id) => Navigation.NavigateTo($"/quote/{id}");
    private void EditQuote(Guid id) => Navigation.NavigateTo($"/quote/{id}/edit");
    private void MessageTradie(Guid id) => Navigation.NavigateTo($"/job/{id}/messages");
    private void MessageCustomer(Guid id) => Navigation.NavigateTo($"/job/{id}/messages");
    private void LeaveReview(Guid id) => Navigation.NavigateTo($"/job/{id}/review");
    private void RepostJob(Guid id) { /* TODO */ }
    private void MarkComplete(Guid id) { /* TODO */ }

    // View models
    private class CustomerJobViewModel
    {
        public Guid Id { get; set; }
        public string Title { get; set; } = "";
        public string Category { get; set; } = "";
        public string Description { get; set; } = "";
        public JobStatus Status { get; set; }
        public string PostedDate { get; set; } = "";
        public string CompletedDate { get; set; } = "";
        public string CancelledDate { get; set; } = "";
        public string Suburb { get; set; } = "";
        public string State { get; set; } = "";
        public decimal? BudgetMin { get; set; }
        public decimal? BudgetMax { get; set; }
        public JobUrgency Urgency { get; set; }
        public int QuotesCount { get; set; }
        public string? AssignedTradie { get; set; }
        public decimal? FinalAmount { get; set; }
        public bool HasReview { get; set; }
    }

    private class TradieQuoteViewModel
    {
        public Guid Id { get; set; }
        public string JobTitle { get; set; } = "";
        public string Category { get; set; } = "";
        public QuoteStatus Status { get; set; }
        public string QuotedDate { get; set; } = "";
        public decimal TotalAmount { get; set; }
        public DateTime? ProposedStartDate { get; set; }
        public int DaysUntilExpiry { get; set; }
    }

    private class TradieJobViewModel
    {
        public Guid Id { get; set; }
        public string Title { get; set; } = "";
        public string CustomerName { get; set; } = "";
        public string CustomerPhone { get; set; } = "";
        public string Address { get; set; } = "";
        public decimal AcceptedAmount { get; set; }
    }
}